<?xml version="1.0" encoding="UTF-8"?>

root
1
1.1

root
2
2.1

root
2
<testsuites>
  <testsuite name="all_features" errors="4" failures="5" tests="25">
    <testcase classname="subcases.cpp" name="lots of nested subcases"/>
    <testcase classname="subcases.cpp"/>
    <testcase classname="subcases.cpp"/>
    <testcase classname="subcases.cpp"/>
    <testcase classname="subcases.cpp"/>
    <testcase classname="subcases.cpp"/>
    <testcase classname="subcases.cpp"/>
    <testcase classname="subcases.cpp" name="subcases can be used in a separate function as well"/>
    <testcase classname="subcases.cpp" name="from function..."/>
    <testcase classname="subcases.cpp" name="sc1"/>
    <testcase classname="subcases.cpp" name="from function..."/>
    <testcase classname="subcases.cpp" name="sc2"/>
    <testcase classname="subcases.cpp" name="  Scenario: vectors can be sized and resized"/>
    <testcase classname="subcases.cpp" name="   Given: A vector with some items"/>
    <testcase classname="subcases.cpp" name="    When: the size is increased"/>
    <testcase classname="subcases.cpp" name="    Then: the size and capacity change">
      <failure message="10 == 20" type="CHECK">
        subcases.cpp(65): Expression v.size() == 20 became 10 == 20
      </failure>
    </testcase>
    <testcase classname="subcases.cpp" name="   Given: A vector with some items"/>
    <testcase classname="subcases.cpp" name="    When: the size is reduced"/>
    <testcase classname="subcases.cpp" name="    Then: the size changes but not capacity"/>
    <testcase classname="subcases.cpp" name="   Given: A vector with some items"/>
    <testcase classname="subcases.cpp" name="    When: more capacity is reserved"/>
    <testcase classname="subcases.cpp" name="    Then: the capacity changes but not the size"/>
    <testcase classname="subcases.cpp" name="   Given: A vector with some items"/>
    <testcase classname="subcases.cpp" name="    When: less capacity is reserved"/>
    <testcase classname="subcases.cpp" name="    Then: neither size nor capacity are changed">
      <failure message="5 == 10" type="CHECK">
        subcases.cpp(89): Expression v.size() == 10 became 5 == 10
      </failure>
    </testcase>
    <testcase classname="subcases.cpp" name="test case should fail even though the last subcase passes"/>
    <testcase classname="subcases.cpp" name="one">
      <failure message="false" type="CHECK">
        subcases.cpp(98): Expression false became false
      </failure>
    </testcase>
    <testcase classname="subcases.cpp" name="two"/>
    <testcase classname="subcases.cpp" name="fails from an exception but gets re-entered to traverse all subcases"/>
    <testcase classname="subcases.cpp" name="level zero"/>
    <testcase classname="subcases.cpp" name="one">
      <failure message="false" type="CHECK">
        subcases.cpp(108): Expression false became false
      </failure>
      <error message="exception">
        exception thrown in subcase - will translate later when the whole test case has been exited (cannot translate while there is an active exception)
      </error>
      <error message="exception">
        failure... but the show must go on!
      </error>
    </testcase>
    <testcase classname="subcases.cpp" name="level zero"/>
    <testcase classname="subcases.cpp" name="two">
      <failure message="false" type="CHECK">
        subcases.cpp(111): Expression false became false
      </failure>
      <error message="exception">
        exception thrown in subcase - will translate later when the whole test case has been exited (cannot translate while there is an active exception)
      </error>
      <error message="exception">
        failure... but the show must go on!
      </error>
    </testcase>
    <testcase classname="subcases.cpp" name="Nested - related to https://github.com/onqtam/doctest/issues/282"/>
    <testcase classname="subcases.cpp" name="generate data variant 1"/>
    <testcase classname="subcases.cpp" name="check data 1"/>
    <testcase classname="subcases.cpp" name="generate data variant 1"/>
    <testcase classname="subcases.cpp" name="check data 2"/>
    <testcase classname="subcases.cpp" name="generate data variant 1"/>
    <testcase classname="subcases.cpp" name="check data 1"/>
    <testcase classname="subcases.cpp" name="generate data variant 1"/>
    <testcase classname="subcases.cpp" name="check data 2"/>
    <testcase classname="subcases.cpp" name="subcases with changing names"/>
    <testcase classname="subcases.cpp" name="outer 0"/>
    <testcase classname="subcases.cpp" name="inner 0"/>
    <testcase classname="subcases.cpp" name="outer 0"/>
    <testcase classname="subcases.cpp" name="inner 1"/>
    <testcase classname="subcases.cpp" name="outer 1"/>
    <testcase classname="subcases.cpp" name="inner 0"/>
    <testcase classname="subcases.cpp" name="outer 1"/>
    <testcase classname="subcases.cpp" name="inner 1"/>
    <testcase classname="subcases.cpp" name="separate"/>
  </testsuite>
</testsuites>
Program code.
